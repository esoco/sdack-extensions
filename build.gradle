buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'gwt-base'

project.version = "1.0.0"

repositories {
    jcenter()
	flatDir { dirs 'gewt-chart/lib', 'gewt-timetable/lib' }
}

dependencies {
 	if (project(':sdack').getProjectDir().exists()) {
		compile project(':sdack')
	}
	else {
		compile 'org.sdack:sdack:1.+'
	}

	compile project(':gewt-chart')
	compile project(':gewt-timetable')
	compile project(':esoco-oauth')

	compile 'commons-fileupload:commons-fileupload:1.3.+'

    testCompile 'junit:junit:4.+'
}

eclipse {
	jdt { 
		sourceCompatibility = "1.7"
		targetCompatibility = "1.7"
	}
}

gwt {
    gwtVersion='2.7.0'
}

jar { from sourceSets.main.allSource }

task binaryJar(type: Jar, dependsOn: classes) {
    classifier = 'bin'
    from sourceSets.main.output
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'src'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'doc'
    from javadoc.destinationDir
}

artifacts {
    archives binaryJar
    archives javadocJar
    archives sourceJar
}

task fullJar(type: Jar) {
    baseName = 'sdack-extensions-all'

    manifest {
        attributes 'Implementation-Title': 'SDACK - Simple Development Application Component Kit',  
	        	   'Implementation-Version': project.version,
	               'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version')
                   
    }
    // exclude files from GWT jar
 	exclude('com/**')
 	exclude('javax/**')
 	exclude('rhino_ast/**')
 	exclude('META-INF/maven/**')
 	// exclude hibernate which is only used for testing
 	exclude('org/hibernate/**')
    
	from { configurations.compile.collect 
		{ it.isDirectory() ? it : zipTree(it) } 
	}
    with jar
}